# Generated by Django 5.1.2 on 2025-01-30 17:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Bloque",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        help_text="Seccion donde esta el bloque, ej Bloque A, B, etc",
                        max_length=50,
                    ),
                ),
                ("disponibilidad", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Bloque",
                "verbose_name_plural": "Bloques",
                "db_table": "bloques",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_bloque", "Puede Autorizar Bloques"],
                    ["viewcrud_bloque", "Puede Visualizar Bloques en el menú"],
                ],
            },
        ),
        migrations.CreateModel(
            name="Cliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(help_text="Nombre del cliente", max_length=200),
                ),
                (
                    "tipo_de_cliente",
                    models.CharField(
                        help_text="Tipo de cliente Vip, Frecuente, Nuevo, etc",
                        max_length=50,
                    ),
                ),
                (
                    "numero_de_celular",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Numero de telefono del cliente",
                        null=True,
                    ),
                ),
                (
                    "correo_cliente",
                    models.CharField(
                        blank=True,
                        help_text="Correo del cliente",
                        max_length=150,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "db_table": "clientes",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_cliente", "Puede Autorizar Clientes"],
                    ["viewcrud_cliente", "Puede Visualizar Clientes en el menú"],
                ],
            },
        ),
        migrations.CreateModel(
            name="Corte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_apertura",
                    models.DateTimeField(help_text="Fecha de apertura del corte"),
                ),
                (
                    "fecha_cierre",
                    models.DateTimeField(
                        blank=True, help_text="Fecha de cierre del corte", null=True
                    ),
                ),
                (
                    "dinero_caja_inicio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Dinero con el que se cuenta al inciar corte",
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "dinero_caja_fin",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Dinero con el que se cuenta al finalizar corte",
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True, help_text="Observaciones del corte", null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Corte",
                "verbose_name_plural": "Cortes",
                "db_table": "cortes",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_corte", "Puede Autorizar Cortes"],
                    ["viewcrud_corte", "Puede Visualizar Cortes en el menú"],
                ],
            },
        ),
        migrations.CreateModel(
            name="Ganancia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total de ganancias diarias",
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "fecha",
                    models.DateField(
                        blank=True, help_text="Fecha del dia de la ganacia", null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Ganancia",
                "verbose_name_plural": "Ganancias",
                "db_table": "ganancia",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_ganancia", "Puede Autorizar Ganancias"],
                    ["viewcrud_ganancia", "Puede Visualizar Ganancias en el menú"],
                ],
            },
        ),
        migrations.CreateModel(
            name="Mesa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(help_text="Tipo de mesa", max_length=50),
                ),
                (
                    "capacidad_personas",
                    models.IntegerField(
                        help_text="Capacidad de personas que permite la mesa"
                    ),
                ),
                ("esta_disponible", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Mesa",
                "verbose_name_plural": "Mesas",
                "db_table": "mesas",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_mesa", "Puede Autorizar Mesas"],
                    ["viewcrud_mesa", "Puede Visualizar Mesas en el menú"],
                ],
            },
        ),
        migrations.CreateModel(
            name="PrecioBloque",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "precio_actual",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Precio actual del bloque",
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "ultima_actualizacion",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha de la ultima actualizacion",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Precio Bloque",
                "verbose_name_plural": "Precio Bloques",
                "db_table": "precio_bloque",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_precio_bloque", "Puede Autorizar Precio Bloques"],
                    [
                        "viewcrud_precio_bloque",
                        "Puede Visualizar Precio Bloques en el menú",
                    ],
                ],
            },
        ),
        migrations.CreateModel(
            name="Producto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre_producto",
                    models.CharField(help_text="Nombre del producto", max_length=150),
                ),
                (
                    "categoria",
                    models.CharField(
                        help_text="Categoria del producto si es, Vino, Cerveza, Etc",
                        max_length=100,
                    ),
                ),
            ],
            options={
                "verbose_name": "Producto",
                "verbose_name_plural": "Productos",
                "db_table": "productos",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_producto", "Puede Autorizar Productos"],
                    ["viewcrud_producto", "Puede Visualizar Productos en el menú"],
                ],
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total de ganancias diarias",
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "fecha",
                    models.DateTimeField(
                        blank=True, help_text="Fecha del dia de la ganacia", null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket",
                "verbose_name_plural": "Tickets",
                "db_table": "tickets",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_tickets", "Puede Autorizar Tickets"],
                    ["viewcrud_tickets", "Puede Visualizar Tickets en el menú"],
                ],
            },
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "estado_solicitud",
                    models.CharField(
                        choices=[("M", "Mesero"), ("C", "Caja"), ("B", "Bartender")],
                        max_length=1,
                    ),
                ),
                (
                    "nombre",
                    models.CharField(help_text="Nombre del cliente", max_length=200),
                ),
                (
                    "numero_de_celular",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Numero de telefono del cliente",
                        null=True,
                    ),
                ),
                (
                    "correo_cliente",
                    models.CharField(
                        blank=True,
                        help_text="Correo del cliente",
                        max_length=150,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
                "db_table": "usuario",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_usuario", "Puede Autorizar Usuarios"],
                    ["viewcrud_usuario", "Puede Visualizar Usuarios en el menú"],
                ],
            },
        ),
        migrations.CreateModel(
            name="Evento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pago_renta", models.BooleanField(default=False)),
                (
                    "fecha_inicio_de_evento",
                    models.DateTimeField(
                        blank=True,
                        help_text="Indica la fecha inicio del evento",
                        null=True,
                    ),
                ),
                (
                    "fecha_final_de_evento",
                    models.DateTimeField(
                        blank=True,
                        help_text="Indica la fecha fin del evento",
                        null=True,
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True,
                        help_text="Indica cualquier información referente al evento",
                        null=True,
                    ),
                ),
                (
                    "bloque",
                    models.ManyToManyField(
                        help_text="Relacion al bloque donde esta el evento",
                        related_name="bloques",
                        to="club.bloque",
                    ),
                ),
                (
                    "cliente_rentador",
                    models.ForeignKey(
                        help_text="Relacion al cliente que renta",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="bloques",
                        to="club.cliente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evento",
                "verbose_name_plural": "Eventos",
                "db_table": "eventos",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_evento", "Puede Autorizar Eventos"],
                    ["viewcrud_evento", "Puede Visualizar Eventos en el menú"],
                ],
            },
        ),
        migrations.AddField(
            model_name="bloque",
            name="en_donde_es_rentado",
            field=models.ForeignKey(
                blank=True,
                help_text="Relacion si disponibilidad es False, esta relacion indicara donde es rentado",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="bloques",
                to="club.evento",
            ),
        ),
        migrations.AddField(
            model_name="bloque",
            name="mesas",
            field=models.ManyToManyField(
                help_text="Relacion a las mesas que son del bloque",
                related_name="bloques",
                to="club.mesa",
            ),
        ),
        migrations.AddField(
            model_name="bloque",
            name="precio_bloque",
            field=models.ForeignKey(
                help_text="Relacion al precio del bloque en cuestion",
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="bloques",
                to="club.preciobloque",
            ),
        ),
        migrations.CreateModel(
            name="Inventario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_de_movimiento",
                    models.CharField(
                        blank=True,
                        help_text="Tipo de movimiento si fue adquisicion de producto, venta, etc",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "fecha_movimiento",
                    models.DateTimeField(
                        blank=True, help_text="Fecha y hora del movimiento", null=True
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True, help_text="Observaciones del inventario", null=True
                    ),
                ),
                (
                    "cantidad",
                    models.IntegerField(help_text="Cantidad del producto relacionado"),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        help_text="Relacion al Producto que esta en el inventario",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="inventarios",
                        to="club.producto",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventario",
                "verbose_name_plural": "Inventarios",
                "db_table": "inventarios",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_inventario", "Puede Autorizar Inventarios"],
                    ["viewcrud_inventario", "Puede Visualizar Inventarios en el menú"],
                ],
            },
        ),
        migrations.CreateModel(
            name="OrdenDeCompra",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cantidad",
                    models.IntegerField(help_text="cantidad de producto solicitado"),
                ),
                (
                    "fecha_de_orden",
                    models.DateField(help_text="fecha de la orden de compra"),
                ),
                (
                    "mesas",
                    models.ForeignKey(
                        help_text="Relacion a la mesa donde se hizo la orden",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="ordenes_de_compras",
                        to="club.mesa",
                    ),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        help_text="Relacion del producto que se ordeno",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="ordenes_de_compras",
                        to="club.producto",
                    ),
                ),
                (
                    "usuario_responsable",
                    models.ForeignKey(
                        help_text="Relacion del usuario que hizo la orden",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="ordenes_de_compras",
                        to="club.usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Orden De Compra",
                "verbose_name_plural": "Ordenes De Compras",
                "db_table": "ordenes_de_compras",
                "ordering": ["pk"],
                "permissions": [
                    ["autorizar_ordencompra", "Puede Autorizar Ordenes De Compras"],
                    [
                        "viewcrud_ordencompra",
                        "Puede Visualizar Ordenes De Compras en el menú",
                    ],
                ],
            },
        ),
    ]
